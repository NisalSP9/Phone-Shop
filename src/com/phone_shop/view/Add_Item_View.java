/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.phone_shop.view;

import com.phone_shop.controller.ItemController;

import com.phone_shop.model.Item;
import com.phone_shop.other.IDGenerator4Int;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author NisalSP9
 */
public class Add_Item_View extends javax.swing.JDialog {

    public Add_Item_View(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            int ID = IDGenerator4Int.getNextId("item", "item_code");
            itemCodeText.setText(ID + "");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Add_Item_View.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        itemCodeText = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        qtyOnHandText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        mainLable = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        warrantytext = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        brandtext = new javax.swing.JTextField();
        selling_price_pre_peace_text = new javax.swing.JTextField();
        reorderLevelText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        purchase_price_pre_peace_text = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        purchase_price_pre_pack_text = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        selling_price_pre_pack_text = new javax.swing.JTextField();
        modelText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Item");
        setBounds(new java.awt.Rectangle(100, 10, 0, 0));
        setMaximumSize(new java.awt.Dimension(538, 685));
        setMinimumSize(new java.awt.Dimension(538, 685));
        setPreferredSize(new java.awt.Dimension(538, 685));
        setResizable(false);
        getContentPane().setLayout(null);

        itemCodeText.setEditable(false);
        getContentPane().add(itemCodeText);
        itemCodeText.setBounds(120, 60, 140, 30);
        getContentPane().add(nameText);
        nameText.setBounds(120, 100, 350, 30);

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(120, 140, 380, 50);

        qtyOnHandText.setText("0");
        qtyOnHandText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyOnHandTextKeyTyped(evt);
            }
        });
        getContentPane().add(qtyOnHandText);
        qtyOnHandText.setBounds(120, 520, 190, 30);

        jLabel10.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel10.setText("QTY On Hand");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(10, 520, 110, 30);

        jLabel9.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel9.setText("Reorder Level");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 480, 110, 30);

        jLabel7.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel7.setText("Description");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(10, 140, 110, 30);

        jLabel6.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel6.setText("Name");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 100, 100, 30);

        jLabel11.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel11.setText("Item Code");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(10, 60, 100, 30);

        mainLable.setFont(new java.awt.Font("Vani", 1, 24)); // NOI18N
        mainLable.setText("Add Item");
        getContentPane().add(mainLable);
        mainLable.setBounds(0, 0, 760, 60);

        saveButton.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton);
        saveButton.setBounds(230, 580, 150, 40);

        resetButton.setFont(new java.awt.Font("Vani", 0, 24)); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton);
        resetButton.setBounds(380, 580, 150, 40);

        warrantytext.setText("NO");
        getContentPane().add(warrantytext);
        warrantytext.setBounds(120, 440, 280, 30);

        jLabel12.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel12.setText("Selling Price Pre Peace");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(10, 400, 200, 30);

        jLabel13.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel13.setText("Model");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(10, 240, 110, 30);

        jLabel14.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel14.setText("Brand");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(10, 200, 110, 30);
        getContentPane().add(brandtext);
        brandtext.setBounds(120, 200, 380, 30);

        selling_price_pre_peace_text.setText("0");
        selling_price_pre_peace_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                selling_price_pre_peace_textKeyTyped(evt);
            }
        });
        getContentPane().add(selling_price_pre_peace_text);
        selling_price_pre_peace_text.setBounds(210, 400, 280, 30);

        reorderLevelText.setText("0");
        reorderLevelText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                reorderLevelTextKeyTyped(evt);
            }
        });
        getContentPane().add(reorderLevelText);
        reorderLevelText.setBounds(120, 480, 190, 30);

        jLabel16.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel16.setText("Warranty");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(10, 440, 110, 30);

        purchase_price_pre_peace_text.setText("0");
        purchase_price_pre_peace_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                purchase_price_pre_peace_textKeyTyped(evt);
            }
        });
        getContentPane().add(purchase_price_pre_peace_text);
        purchase_price_pre_peace_text.setBounds(210, 280, 280, 30);

        jLabel17.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel17.setText("Purchase Price Pre Pack");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(10, 280, 200, 30);

        purchase_price_pre_pack_text.setText("0");
        purchase_price_pre_pack_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                purchase_price_pre_pack_textKeyTyped(evt);
            }
        });
        getContentPane().add(purchase_price_pre_pack_text);
        purchase_price_pre_pack_text.setBounds(210, 320, 280, 30);

        jLabel18.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel18.setText("Purchase Price Pre Peace");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(10, 320, 200, 30);

        jLabel19.setFont(new java.awt.Font("Vani", 1, 14)); // NOI18N
        jLabel19.setText("Selling price pre pack");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(10, 360, 200, 30);

        selling_price_pre_pack_text.setText("0");
        selling_price_pre_pack_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                selling_price_pre_pack_textKeyTyped(evt);
            }
        });
        getContentPane().add(selling_price_pre_pack_text);
        selling_price_pre_pack_text.setBounds(210, 360, 280, 30);
        getContentPane().add(modelText);
        modelText.setBounds(120, 240, 280, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/phone_shop/view/pics/Win8BackGround-303030.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 930, 730);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        if (!(nameText.getText().trim().equals("")) && !(purchase_price_pre_pack_text.getText().trim().equals("")) && !(purchase_price_pre_peace_text.getText().trim().equals("")) && !(selling_price_pre_pack_text.getText().trim().equals("")) && !(selling_price_pre_peace_text.getText().trim().equals("")) && !(qtyOnHandText.getText().trim().equals(""))) {

            int okayORnot = JOptionPane.showConfirmDialog(Add_Item_View.this, "Do you really want to ADD this ?", "ADD", JOptionPane.YES_NO_OPTION);
            if (okayORnot == 0) {

                int itemCode = Integer.parseInt(itemCodeText.getText());
                String name = nameText.getText();
                String description = descriptionTextArea.getText();
                String brand = brandtext.getText();
                String model = modelText.getText();

                double purchase_price_pre_pack = Double.parseDouble(purchase_price_pre_pack_text.getText());
                double purchase_price_pre_peace = Double.parseDouble(purchase_price_pre_peace_text.getText());
                double selling_price_pre_pack = Double.parseDouble(selling_price_pre_pack_text.getText());
                double selling_price_pre_peace = Double.parseDouble(selling_price_pre_peace_text.getText());

                String warranty = warrantytext.getText();
                int reorder_Level = Integer.parseInt(reorderLevelText.getText());
                double qty_On_Hand = Double.parseDouble(qtyOnHandText.getText());

                Item item = new Item(itemCode,
                        name,
                        description,
                        brand,
                        model,
                        purchase_price_pre_pack,
                        purchase_price_pre_peace,
                        selling_price_pre_pack,
                        selling_price_pre_peace,
                        warranty,
                        reorder_Level,
                        qty_On_Hand);

                try {
                    int resItem = ItemController.addItems(item);

                    if (resItem > 0) {
                        JOptionPane.showMessageDialog(Add_Item_View.this, "Added");
                        resetButton.doClick();

                        try {
                            int ID = IDGenerator4Int.getNextId("item", "item_code");
                            itemCodeText.setText(ID + "");
                        } catch (ClassNotFoundException | SQLException ex) {
                            Logger.getLogger(Add_Item_View.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                } catch (NumberFormatException | SQLException | ClassNotFoundException e) {
                    JOptionPane.showMessageDialog(Add_Item_View.this, e.getMessage());

                }
            }
        } else {
            JOptionPane.showMessageDialog(Add_Item_View.this, "Name,Purchase,Selling amounts and QTY On Hand can't be Empty...!");
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed

        itemCodeText.setText("");
        nameText.setText("");
        descriptionTextArea.setText("");
        modelText.setText("");
        warrantytext.setText("");
        brandtext.setText("");
        selling_price_pre_peace_text.setText("0");
        selling_price_pre_pack_text.setText("0");
        purchase_price_pre_pack_text.setText("0");
        purchase_price_pre_peace_text.setText("0");

        qtyOnHandText.setText("");
        reorderLevelText.setText("");

        try {
            int ID = IDGenerator4Int.getNextId("item", "item_code");
            itemCodeText.setText(ID + "");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Add_Item_View.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_resetButtonActionPerformed

    private void purchase_price_pre_peace_textKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_purchase_price_pre_peace_textKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_ENTER)) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_purchase_price_pre_peace_textKeyTyped

    private void purchase_price_pre_pack_textKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_purchase_price_pre_pack_textKeyTyped
       char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_ENTER)) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_purchase_price_pre_pack_textKeyTyped

    private void selling_price_pre_pack_textKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selling_price_pre_pack_textKeyTyped
       char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_ENTER)) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_selling_price_pre_pack_textKeyTyped

    private void selling_price_pre_peace_textKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selling_price_pre_peace_textKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_ENTER)) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_selling_price_pre_peace_textKeyTyped

    private void reorderLevelTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reorderLevelTextKeyTyped
       char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_ENTER)) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_reorderLevelTextKeyTyped

    private void qtyOnHandTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyOnHandTextKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_ENTER)) {
            getToolkit().beep();
            evt.consume();

        }
    }//GEN-LAST:event_qtyOnHandTextKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_Item_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_Item_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_Item_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_Item_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Add_Item_View dialog = new Add_Item_View(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField brandtext;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JTextField itemCodeText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mainLable;
    private javax.swing.JTextField modelText;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField purchase_price_pre_pack_text;
    private javax.swing.JTextField purchase_price_pre_peace_text;
    private javax.swing.JTextField qtyOnHandText;
    private javax.swing.JTextField reorderLevelText;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField selling_price_pre_pack_text;
    private javax.swing.JTextField selling_price_pre_peace_text;
    private javax.swing.JTextField warrantytext;
    // End of variables declaration//GEN-END:variables
}
