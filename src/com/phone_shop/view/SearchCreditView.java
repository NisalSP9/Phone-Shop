/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.phone_shop.view;

import com.phone_shop.controller.CreditDetailController;
import com.phone_shop.model.CreditDetailModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author NisalSP9
 */
public class SearchCreditView extends javax.swing.JDialog {

//    
    private String Order_ID;

    /**
     * Creates new form SearchCreditView
     */
    public SearchCreditView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        autoFillCB();
        trackEnterPressed();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OrderCB = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        customerIDtext = new javax.swing.JTextField();
        customerNametext = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        received_DateText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        stateText = new javax.swing.JTextField();
        receivedText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        amountText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        balanceText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(10, 10, 0, 0));
        setMinimumSize(new java.awt.Dimension(540, 580));
        setResizable(false);
        getContentPane().setLayout(null);

        OrderCB.setEditable(true);
        OrderCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderCBActionPerformed(evt);
            }
        });
        getContentPane().add(OrderCB);
        OrderCB.setBounds(220, 110, 270, 30);

        jLabel11.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        jLabel11.setText("Customer ID");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(50, 150, 160, 40);

        customerIDtext.setEditable(false);
        customerIDtext.setBackground(new java.awt.Color(204, 204, 204));
        customerIDtext.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        getContentPane().add(customerIDtext);
        customerIDtext.setBounds(220, 150, 270, 40);

        customerNametext.setEditable(false);
        customerNametext.setBackground(new java.awt.Color(204, 204, 204));
        customerNametext.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        getContentPane().add(customerNametext);
        customerNametext.setBounds(220, 200, 270, 40);

        jLabel7.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        jLabel7.setText("Customer Name");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(50, 200, 160, 40);

        jLabel4.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        jLabel4.setText("Received_Date");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(50, 250, 160, 40);

        received_DateText.setEditable(false);
        received_DateText.setBackground(new java.awt.Color(204, 204, 204));
        received_DateText.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        getContentPane().add(received_DateText);
        received_DateText.setBounds(220, 250, 270, 40);

        jLabel1.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        jLabel1.setText("State");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(50, 300, 160, 40);

        stateText.setEditable(false);
        stateText.setBackground(new java.awt.Color(204, 204, 204));
        stateText.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        getContentPane().add(stateText);
        stateText.setBounds(220, 300, 270, 40);

        receivedText.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        receivedText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                receivedTextMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                receivedTextMouseExited(evt);
            }
        });
        receivedText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receivedTextActionPerformed(evt);
            }
        });
        receivedText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                receivedTextKeyTyped(evt);
            }
        });
        getContentPane().add(receivedText);
        receivedText.setBounds(220, 450, 270, 40);

        jLabel6.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        jLabel6.setText("Received Payment");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(50, 450, 160, 40);

        jLabel8.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        jLabel8.setText("Amount");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(50, 350, 160, 40);

        amountText.setEditable(false);
        amountText.setBackground(new java.awt.Color(204, 204, 204));
        amountText.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        getContentPane().add(amountText);
        amountText.setBounds(220, 350, 270, 40);

        jLabel9.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        jLabel9.setText("Balance Payment");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(50, 400, 160, 40);

        balanceText.setEditable(false);
        balanceText.setBackground(new java.awt.Color(204, 204, 204));
        balanceText.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        getContentPane().add(balanceText);
        balanceText.setBounds(220, 400, 270, 40);

        jLabel10.setFont(new java.awt.Font("Vani", 1, 24)); // NOI18N
        jLabel10.setText("Search Credit Payment");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(4, 0, 390, 80);

        jLabel12.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        jLabel12.setText("Order ID");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(50, 110, 160, 30);

        resetButton.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        resetButton.setText("RESET");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton);
        resetButton.setBounds(380, 500, 140, 40);

        updateButton.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton);
        updateButton.setBounds(240, 500, 140, 40);

        deleteButton.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton);
        deleteButton.setBounds(100, 500, 140, 40);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/phone_shop/view/pics/Win8BackGround-303030.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(-30, -16, 650, 620);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OrderCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderCBActionPerformed
        itemInfor();


    }//GEN-LAST:event_OrderCBActionPerformed

    private void receivedTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_receivedTextKeyTyped

    }//GEN-LAST:event_receivedTextKeyTyped

    private void receivedTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receivedTextActionPerformed

        double balance, received = 0;

        if (!amountText.getText().trim().equals("")) {

            if (!balanceText.getText().trim().equals("")) {

                balance = Double.parseDouble(balanceText.getText());
                received = Double.parseDouble(receivedText.getText());

                double value = balance - received;

                if (value >= 0) {
                    balanceText.setText(Double.toString(value));

                    receivedText.setEnabled(false);
                    
                    if(balance==0){
                    
                        stateText.setText("Okay");
                    
                    }

                } else {

                    JOptionPane.showMessageDialog(SearchCreditView.this, "Received Payment Value is gerater than Balance Payment !");
                    receivedText.setText("0");

                }

            } else {

                JOptionPane.showMessageDialog(SearchCreditView.this, "Balance is Missing !");

            }

        } else {

            JOptionPane.showMessageDialog(SearchCreditView.this, "Amount is Missing !");
        }

        if (balanceText.getText().trim().equals("0.0")) {

            stateText.setText("Okay");

        }
        return;
    }//GEN-LAST:event_receivedTextActionPerformed

    private void receivedTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receivedTextMouseClicked
        if (receivedText.getText().trim().equals("0.0") || receivedText.getText().trim().equals("0")) {
            receivedText.setText("");
        }
    }//GEN-LAST:event_receivedTextMouseClicked

    private void receivedTextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_receivedTextMouseExited

        if (receivedText.getText().trim().equals("")) {
            receivedText.setText("0");
        }
    }//GEN-LAST:event_receivedTextMouseExited

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        received_DateText.setText("");
        stateText.setText("");
        amountText.setText("");
        balanceText.setText("");
        receivedText.setText("");
        customerIDtext.setText("");
        customerNametext.setText("");
        receivedText.setEnabled(true);
        OrderCB.removeAllItems();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

        int yesOrNo = JOptionPane.showConfirmDialog(SearchCreditView.this, "Do you want to UPDATE this !", "Update", JOptionPane.YES_NO_OPTION);

        if (yesOrNo == 0) {

            if (!customerIDtext.getText().trim().equals("")) {

                String state = stateText.getText();
                double balanceAmount = Double.parseDouble(balanceText.getText());
                double receivedAmount = Double.parseDouble(receivedText.getText());

                try {

                    CreditDetailModel creditDetailModel = new CreditDetailModel(Order_ID, state, balanceAmount, receivedAmount);

                    int rst = CreditDetailController.updateCreditDetail(creditDetailModel);

                    if (rst > 0) {

                        JOptionPane.showMessageDialog(SearchCreditView.this, "Update !");
                        resetButton.doClick();

                    } else {

                        JOptionPane.showMessageDialog(SearchCreditView.this, "Update Fail !");

                    }
                } catch (ClassNotFoundException | SQLException ex) {
                    JOptionPane.showMessageDialog(SearchCreditView.this, ex);
                }
            } else {

                JOptionPane.showMessageDialog(SearchCreditView.this, "Update Fail !");

            }
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        
        int yesOrNo = JOptionPane.showConfirmDialog(SearchCreditView.this, "Do you want to DELETE this !", "Delete", JOptionPane.YES_NO_OPTION);

        if (yesOrNo == 0) {
            try {
                int rst = CreditDetailController.deleteCreditDetail(Order_ID);

                if (rst > 0) {

                    JOptionPane.showMessageDialog(SearchCreditView.this, "Delete !");
                    resetButton.doClick();

                } 
                
                else {

                    JOptionPane.showMessageDialog(SearchCreditView.this, "Fail to Delete !");

                }

            } catch (ClassNotFoundException | SQLException ex) {
                JOptionPane.showMessageDialog(SearchCreditView.this, ex);
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchCreditView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchCreditView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchCreditView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchCreditView.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SearchCreditView dialog = new SearchCreditView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void autoFillCB() {

        OrderCB.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent evt) {

                String Letter = OrderCB.getEditor().getItem().toString();

                if (evt.getKeyCode() >= 48 || evt.getKeyCode() <= 57 || evt.getKeyCode() == 40 || evt.getKeyCode() == 38 || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getKeyCode() == KeyEvent.VK_ENTER && Letter != null) {

                    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                        nameSender(Letter);

                    }

                } else {

                    JOptionPane.showMessageDialog(SearchCreditView.this, "Wrong Input...!");
                    OrderCB.removeAllItems();
                    resetButton.doClick();

                }

            }

        });

    }

    public void nameSender(String Letter) {

        CreditDetailController paymentController = new CreditDetailController();

        try {

            if (paymentController.getList(Letter) != null) {

                OrderCB.setModel(paymentController.getList(Letter));

            }

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Search_Item_View.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        if (OrderCB.getItemCount() > 0) {

            OrderCB.showPopup();

            itemInfor();

        }

    }

    public void itemInfor() {

        CreditDetailController chequeDetailController = new CreditDetailController();

        if (OrderCB.isPopupVisible()) {
            String ID = OrderCB.getSelectedItem().toString();

            System.out.println(ID);
            String order[] = null;
            try {
                order = chequeDetailController.giveAwayOrderInfro(ID);

            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(SearchChequePayment.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

            if (order[0] == null) {

                JOptionPane.showMessageDialog(SearchCreditView.this, "Can't Find...!");

                OrderCB.removeAllItems();
                resetButton.doClick();

            } else {

                Order_ID = OrderCB.getSelectedItem().toString();
                received_DateText.setText(order[0]);
                stateText.setText(order[1]);
                amountText.setText(order[2]);
                balanceText.setText(order[3]);
                receivedText.setText(order[4]);
                customerIDtext.setText(order[5]);
                customerNametext.setText(order[6]);

            }

        } else {

            System.out.println("fffffffffffffffffffff");
           // resetButton.doClick();
        }

    }

    public void trackEnterPressed() {

        OrderCB.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent evt) {

                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                    itemInfor();
                }

            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox OrderCB;
    private javax.swing.JTextField amountText;
    private javax.swing.JTextField balanceText;
    private javax.swing.JTextField customerIDtext;
    private javax.swing.JTextField customerNametext;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField receivedText;
    private javax.swing.JTextField received_DateText;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField stateText;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
