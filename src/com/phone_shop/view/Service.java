/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.phone_shop.view;

import com.phone_shop.controller.CustomerController;
import com.phone_shop.controller.OrderController;
import com.phone_shop.controller.PaymentController;
import com.phone_shop.controller.ServiceDetailController;
import com.phone_shop.model.Order;
import com.phone_shop.model.Payment;
import com.phone_shop.model.serviceDetail;
import com.phone_shop.other.IDGenerator4Int;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRCsvDataSource;
import net.sf.jasperreports.engine.data.JRMapCollectionDataSource;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.dom4j.Branch;

/**
 *
 * @author aDMIN
 */
public class Service extends javax.swing.JDialog {

    private double price;
    private String date;
    private double total;
    private int ID;

    /**
     * Creates new form Service
     */
    public Service(java.awt.Frame parent, boolean modal, String user) {
        // super(parent, modal); //because of this jreport go behind
        initComponents();

        //get Current date
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date curDate = new Date();
        date = dateFormat.format(curDate);
        dateText.setText(date);

        try {
            ID = IDGenerator4Int.getNextId("ordertable", "orderID");
            serviceID.setText(ID + "");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddCustomerView.class.getName()).log(Level.SEVERE, null, ex);
        }

        username.setText(user);

        autoFillCB();
        trackEnterPressed();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel19 = new javax.swing.JLabel();
        totalText = new javax.swing.JTextField();
        username = new javax.swing.JLabel();
        discountText = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dateText = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        serviceID = new javax.swing.JTextField();
        custCB = new javax.swing.JComboBox();
        addCustomerButton3 = new javax.swing.JButton();
        custName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        custID = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        IMEIText = new javax.swing.JTextField();
        brandText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        modelText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        faultText = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cashText = new javax.swing.JTextField();
        priceText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        balanceText = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        paymentTypeCB = new javax.swing.JComboBox();
        resetButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(580, 680));
        setMinimumSize(new java.awt.Dimension(580, 680));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel19.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel19.setText("Total");
        getContentPane().add(jLabel19);
        jLabel19.setBounds(10, 530, 90, 40);

        totalText.setBackground(new java.awt.Color(204, 204, 204));
        totalText.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        totalText.setText("0");
        getContentPane().add(totalText);
        totalText.setBounds(100, 530, 180, 40);

        username.setFont(new java.awt.Font("Open Sans", 0, 20)); // NOI18N
        username.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        username.setText("User");
        getContentPane().add(username);
        username.setBounds(420, 50, 150, 40);

        discountText.setBackground(new java.awt.Color(204, 204, 204));
        discountText.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        discountText.setText("0");
        discountText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountTextActionPerformed(evt);
            }
        });
        getContentPane().add(discountText);
        discountText.setBounds(100, 490, 180, 40);

        jLabel17.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel17.setText("Discount");
        getContentPane().add(jLabel17);
        jLabel17.setBounds(10, 490, 80, 40);

        jLabel1.setFont(new java.awt.Font("Open Sans", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Phone Repair Service");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 0, 330, 40);

        dateText.setFont(new java.awt.Font("Open Sans", 0, 24)); // NOI18N
        dateText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dateText.setText("7878");
        getContentPane().add(dateText);
        dateText.setBounds(400, 0, 170, 40);

        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel4.setText("Service ID");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 50, 70, 40);

        serviceID.setEditable(false);
        serviceID.setBackground(new java.awt.Color(204, 204, 204));
        serviceID.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        getContentPane().add(serviceID);
        serviceID.setBounds(80, 50, 100, 40);

        custCB.setEditable(true);
        custCB.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        custCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custCBActionPerformed(evt);
            }
        });
        getContentPane().add(custCB);
        custCB.setBounds(10, 100, 370, 40);

        addCustomerButton3.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        addCustomerButton3.setText("New Customer");
        addCustomerButton3.setBorder(null);
        addCustomerButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addCustomerButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(addCustomerButton3);
        addCustomerButton3.setBounds(390, 100, 180, 40);

        custName.setEditable(false);
        custName.setBackground(new java.awt.Color(204, 204, 204));
        custName.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        custName.setText("Retail Customer ");
        getContentPane().add(custName);
        custName.setBounds(360, 150, 210, 40);

        jLabel10.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel10.setText("Customer");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(290, 150, 70, 40);

        custID.setEditable(false);
        custID.setBackground(new java.awt.Color(204, 204, 204));
        custID.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        custID.setText("0");
        getContentPane().add(custID);
        custID.setBounds(100, 150, 160, 40);

        jLabel12.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel12.setText("Customer ID");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(10, 150, 90, 40);

        jLabel14.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel14.setText("IMEI No");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(10, 200, 90, 40);

        IMEIText.setBackground(new java.awt.Color(204, 204, 204));
        IMEIText.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        getContentPane().add(IMEIText);
        IMEIText.setBounds(100, 200, 470, 40);

        brandText.setBackground(new java.awt.Color(204, 204, 204));
        brandText.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        getContentPane().add(brandText);
        brandText.setBounds(100, 250, 470, 40);

        jLabel11.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel11.setText("Brand");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(10, 250, 90, 40);

        jLabel18.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel18.setText("Model");
        getContentPane().add(jLabel18);
        jLabel18.setBounds(10, 300, 90, 40);

        modelText.setBackground(new java.awt.Color(204, 204, 204));
        modelText.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        getContentPane().add(modelText);
        modelText.setBounds(100, 300, 470, 40);

        faultText.setColumns(20);
        faultText.setRows(5);
        jScrollPane2.setViewportView(faultText);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(100, 350, 470, 90);

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel3.setText("Fault");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 350, 100, 30);

        jLabel16.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel16.setText("Cash");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(10, 570, 60, 40);

        cashText.setBackground(new java.awt.Color(204, 204, 204));
        cashText.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        cashText.setText("0");
        cashText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashTextActionPerformed(evt);
            }
        });
        cashText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashTextKeyTyped(evt);
            }
        });
        getContentPane().add(cashText);
        cashText.setBounds(100, 570, 180, 40);

        priceText.setBackground(new java.awt.Color(204, 204, 204));
        priceText.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        priceText.setText("0");
        priceText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTextActionPerformed(evt);
            }
        });
        getContentPane().add(priceText);
        priceText.setBounds(100, 450, 180, 40);

        jLabel15.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel15.setText("Price");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(10, 450, 80, 40);

        jLabel13.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel13.setText("Balance");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(10, 610, 80, 40);

        balanceText.setEditable(false);
        balanceText.setBackground(new java.awt.Color(204, 204, 204));
        balanceText.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        balanceText.setText("0");
        getContentPane().add(balanceText);
        balanceText.setBounds(100, 610, 180, 40);

        saveButton.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        saveButton.setText("SAVE");
        saveButton.setBorder(null);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton);
        saveButton.setBounds(390, 610, 180, 40);

        paymentTypeCB.setFont(new java.awt.Font("Utsaah", 1, 24)); // NOI18N
        paymentTypeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Cheque", "Credit" }));
        paymentTypeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentTypeCBActionPerformed(evt);
            }
        });
        getContentPane().add(paymentTypeCB);
        paymentTypeCB.setBounds(390, 500, 180, 40);

        resetButton.setFont(new java.awt.Font("Open Sans", 1, 18)); // NOI18N
        resetButton.setText("RESET");
        resetButton.setBorder(null);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton);
        resetButton.setBounds(390, 450, 180, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/phone_shop/view/pics/Win8BackGround-303030.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 580, 680);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addCustomerButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButton3ActionPerformed
        new AddCustomerView(null, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_addCustomerButton3ActionPerformed

    private void cashTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashTextActionPerformed
        total = Double.parseDouble(totalText.getText());
        
        balanceText.setText(Double.parseDouble(cashText.getText()) - total+"");
    }//GEN-LAST:event_cashTextActionPerformed

    private void cashTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashTextKeyTyped
        char c = evt.getKeyChar();

        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE || c == KeyEvent.VK_ENTER)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_cashTextKeyTyped

    private void paymentTypeCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentTypeCBActionPerformed

        switch (paymentTypeCB.getSelectedIndex()) {

            case 1:
                new ChequeDetailView(null, rootPaneCheckingEnabled, total + "", date, ID + "").setVisible(true);
                saveButton.doClick();
                break;
            case 2:
                new CreditDetail(null, rootPaneCheckingEnabled, total + "", date, ID + "").setVisible(true);
                saveButton.doClick();
                break;

        }


    }//GEN-LAST:event_paymentTypeCBActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed

        custID.setText("0");
        custName.setText("Retail Customer");
        IMEIText.setText("");
        brandText.setText("");
        faultText.setText("");
        modelText.setText("");
        priceText.setText("0");
        discountText.setText("0");
        cashText.setText("0");
        balanceText.setText("0");
        totalText.setText("0");

        custCB.removeAllItems();

        try {
            ID = IDGenerator4Int.getNextId("ordertable", "orderID");
            serviceID.setText(ID + "");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(AddCustomerView.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_resetButtonActionPerformed

    private void custCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custCBActionPerformed
        itemInfor();
    }//GEN-LAST:event_custCBActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        if (IMEIText.getText().isEmpty()) {

            JOptionPane.showMessageDialog(Service.this, "Please Enter IMEI No");

        } else if (brandText.getText().isEmpty()) {

            JOptionPane.showMessageDialog(Service.this, "Please Enter Brand");

        } else if (modelText.getText().isEmpty()) {

            JOptionPane.showMessageDialog(Service.this, "Please Enter Model");

        } else if (faultText.getText().isEmpty()) {

            JOptionPane.showMessageDialog(Service.this, "Please Enter Fault");

        } else {

            int okayORnot = JOptionPane.showConfirmDialog(null, "Do you really want to SAVE this ?", "SAVE", JOptionPane.YES_NO_OPTION);

            if (okayORnot != 0) {

                resetButton.doClick();

            } else {

                String ID = serviceID.getText();
                date = dateText.getText();
                String cusID = custID.getText();

                String IMEI_no = IMEIText.getText();
                String brand = brandText.getText();
                String model = modelText.getText();

                String fault = faultText.getText();
                total = Double.parseDouble(priceText.getText());
                double discount = Double.parseDouble(discountText.getText());

                String paymentType = paymentTypeCB.getSelectedItem().toString();

                Order order = new Order(ID, cusID, date);
                serviceDetail detail = new serviceDetail(Integer.parseInt(ID), IMEI_no, brand, model, fault, price, discount);
                Payment payment = new Payment(ID, cusID, paymentType, date, total);

                try {
                    OrderController.addOrder(order);
                    ServiceDetailController.addServiceDetails(detail);
                    PaymentController.addPayment(payment);
                } catch (ClassNotFoundException | SQLException ex) {
                    Logger.getLogger(Service.class.getName()).log(Level.SEVERE, null, ex);
                }

                int okayORnotPrint = JOptionPane.showConfirmDialog(null, "Do you really want to Print this ?", "Print", JOptionPane.YES_NO_OPTION);

                if (okayORnotPrint == 0) {

                    printInvoice();

                }else{
                
                    resetButton.doClick();
                
                }

            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void discountTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountTextActionPerformed
      
        price = Double.parseDouble(priceText.getText());
        
        price = price - Double.parseDouble(discountText.getText());
        
       totalText.setText(price+"");
       
    }//GEN-LAST:event_discountTextActionPerformed

    private void priceTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTextActionPerformed
        totalText.setText(priceText.getText());
    }//GEN-LAST:event_priceTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Service.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Service dialog = new Service(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void autoFillCB() {

        custCB.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent evt) {

                String Letter = custCB.getEditor().getItem().toString();

                if (evt.getKeyCode() == 40 || evt.getKeyCode() == 38 || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getKeyCode() >= 65 || evt.getKeyCode() <= 90 || evt.getKeyCode() == KeyEvent.VK_ENTER && Letter != null) {

                    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                        char[] k = Letter.toCharArray();
                        try {
                            if (Character.isLetter(k[0])) {

                                nameSender(Letter);

                            }

                        } catch (ArrayIndexOutOfBoundsException e) {

                            custCB.setFocusable(false);
                            JOptionPane.showMessageDialog(Service.this, "Sorry...!");
                            //   ResetCustomerButton.doClick();
                            custCB.setFocusable(true);

                        }

                    }

                } else {

                    JOptionPane.showMessageDialog(Service.this, "Wrong Input...!");
                    custCB.removeAllItems();

                }

            }

        });

    }

    public void nameSender(String Letter) {

        CustomerController customer = new CustomerController();

        try {

            if (customer.getList(Letter) != null) {

                custCB.setModel(customer.getList(Letter));

            }

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Search_Item_View.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (custCB.getItemCount() > 0) {

            custCB.showPopup();
            itemInfor();

        }

    }

    public void itemInfor() {

        try {
            CustomerController customer = new CustomerController();

            String[] ID = custCB.getSelectedItem().toString().split("\\ ");

            String infro[] = customer.giveAwayOrderInfro(ID[0]);
            try {
                custID.setText(infro[0]);
                custName.setText(infro[1]);

            } catch (NullPointerException ex) {
                custCB.setFocusable(false);
                JOptionPane.showMessageDialog(Service.this, "Can't Find...!");
                //  ResetCustomerButton.doClick();
                custCB.setFocusable(true);
            }
        } catch (SQLException | ClassNotFoundException | NullPointerException ex) {
            custCB.setFocusable(false);
            //JOptionPane.showMessageDialog(SearchCustomerView.this, "Can'tFind...!");
            //ResetCustomerButton.doClick();
            custCB.setFocusable(true);
        }

    }

    public void trackEnterPressed() {

        custCB.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent evt) {

                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

                    itemInfor();

                }

            }
        });

    }

    private void printInvoice() {

        try {

           // JasperReport jr = JasperCompileManager.compileReport("src\\com\\phone_shop\\report\\serviceInvoice.jrxml");
           JasperReport jr = JasperCompileManager.compileReport("serviceInvoice.jrxml");
            Map<String, Object> params = new HashMap<>();

            params.put("USER", username.getText());
            params.put("ORDERID", serviceID.getText());
            params.put("PRICE", priceText.getText());
            params.put("TOTAL", totalText.getText());
            params.put("CASH", cashText.getText());
            params.put("CHANGE", balanceText.getText());
            params.put("CUSTOMER", custName.getText());
            params.put("IMEI", IMEIText.getText());
            params.put("BRAND", brandText.getText());
            params.put("MODEL", modelText.getText());
            params.put("FAULT", faultText.getText());
            params.put("DISCOUNT", discountText.getText());
            params.put("PAYMENTTYPE", paymentTypeCB.getSelectedItem().toString());

            JRDataSource dataSource = new JREmptyDataSource();//because no data want to send using datasource

            JasperPrint jp = JasperFillManager.fillReport(jr, params, dataSource);

            //JasperPrintManager.printReport(jp, false);
            JasperViewer.viewReport(jp, false);

        } catch (JRException ex) {
            Logger.getLogger(Place_Customer_Order.class.getName()).log(Level.SEVERE, null, ex);
            // JOptionPane.showMessageDialog(Service.this, ex);
        }

        resetButton.doClick();

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IMEIText;
    private javax.swing.JButton addCustomerButton3;
    private javax.swing.JTextField balanceText;
    private javax.swing.JTextField brandText;
    private javax.swing.JTextField cashText;
    private javax.swing.JComboBox custCB;
    private javax.swing.JTextField custID;
    private javax.swing.JTextField custName;
    private javax.swing.JLabel dateText;
    private javax.swing.JTextField discountText;
    private javax.swing.JTextArea faultText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField modelText;
    private javax.swing.JComboBox paymentTypeCB;
    private javax.swing.JTextField priceText;
    private javax.swing.JButton resetButton;
    public javax.swing.JButton saveButton;
    private javax.swing.JTextField serviceID;
    private javax.swing.JTextField totalText;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
